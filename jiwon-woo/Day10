//Day10
//점의 위치 구하기
class Solution {
    public int solution(int[] dot) {
        int answer = 0;
        int x = dot[0];
        int y = dot[1];
        
        if (x>0 && y>0){
            answer = 1;
        } else if (x<0 && y>0){
            answer = 2;
        } else if (x<0 && y<0){
            answer = 3;
        } else {
            answer = 4;
        }
        return answer;
    }
}
//2차원으로 만들기
class Solution {
    public int[][] solution(int[] num_list, int n) {
        int row = num_list.length / n;
        
        int[][] answer = new int[row][n];
        
        int count = 0;
        for (int j=0; j<row; j++){
            for (int k=0; k<n; k++){
                answer[j][k] = num_list[count];
                count++;
            }

        }
        
        return answer;
    }
}
//공 던지기
class Solution {
    public int solution(int[] numbers, int k) {
        int number = 0;
        int len = numbers.length;
        
        //k*2 는 공을 받는 사람
        //(k-1)*2 는 공을 던지는 사람, 2를 곱하는 이유는 2칸씩 건너뛰니까
        //나머지로 위치 찾기 %len
        number = numbers[((k - 1) * 2) % len];
        
        return number;
    }
}
//배열 회전시키기
class Solution {
    public int[] solution(int[] numbers, String direction) {
        int[] answer = new int[numbers.length];
        
        if (direction.equals("left")){
            
            int firstNum = numbers[0];
            
            for(int i=1; i<numbers.length; i++){
                answer[i-1] = numbers[i];
            }
            answer[numbers.length-1] = firstNum; 
            
        } else if (direction.equals("right")){
            
            int lastNum = numbers[numbers.length-1];
            answer[0] = lastNum;
            
            for(int i=0; i<numbers.length-1; i++){
                answer[i+1] = numbers[i];
            }
        }
        
        return answer;
    }
}

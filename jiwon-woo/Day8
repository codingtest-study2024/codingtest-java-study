//Day8
//배열 자르기
class Solution {
    public int[] solution(int[] numbers, int num1, int num2) {
        int[] answer = new int[num2-num1+1];
        
        int j = 0;
        for (int i=num1; i<=num2; i++){
            
            answer[j] = numbers[i];
            j++;
        }
        return answer;
    }
}
//외계행성의 나이
class Solution {
    public String solution(int age) {
        String answer = "";
        String s = Integer.toString(age);
        
        for (int i=0; i<s.length(); i++){
            answer += (char)(s.charAt(i) + 49);
        }
        
        return answer;
    }
}
//진료순서 정하기
class Solution {
    public int[] solution(int[] emergency) {
        int[] answer = new int[emergency.length];
        
        for(int i=0; i<emergency.length; i++){
            answer[i]++;
            
            for(int j=0; j<emergency.length; j++){
                if(emergency[i]<emergency[j])
                    answer[i]++;
            }
        }
        return answer;
    }
}
//순서쌍의 개수
class Solution {
    public int solution(int n) {
        int answer = 0;
        for (int i=1; i<=n; i++){
            if (n%i == 0){
                answer++;
            }
        }
        return answer;
    }
}

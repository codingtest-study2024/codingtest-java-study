//개미 군단

class Solution {
    public int solution(int hp) {
        int answer = 0;
        answer += hp/5;
        hp = hp%5;
        answer += hp/3;
        hp = hp%3;
        answer += hp;
        return answer;
    }
}

//모스부호(1)
class Solution {
    public String solution(String letter) {
        String answer = "";
        String[] morse = {".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..","--","-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."};
        String[] word = letter.split(" ");

        for(int i=0;i<word.length;i++){
            for(int j=0;j<morse.length;j++){
                if(word[i].equals(morse[j])) answer+=(char)(j+97);
            }
        }

        return answer;
    }
}

//가위 바위 보
import java.util.HashMap;
import java.util.Map;
import java.util.Arrays;
import java.util.stream.Collectors;


class Solution {
    Map<String, String> dictionary = new HashMap<>() {{
        put("2","0");
        put("0","5");
        put("5","2");
    }};

    public String solution(String rsp) {
        return Arrays.stream(rsp.split(""))
            .map(dictionary::get)
            .collect(Collectors.joining());
    }
}

//구슬을 나누는 경우의 수
class Solution {

    public static int combination(int balls, int share){
        if(balls == share || share == 0) return 1;
        return combination((balls-1),(share-1)) + combination(balls-1,share);
    }
    public int solution(int balls, int share) {
        return combination(balls,share);
    }
}

//컨트롤 제트
import java.util.*;

class Solution {
    public int solution(String s) {
        int answer = 0;
        Stack<Integer> stack = new Stack<>();

        for (String w : s.split(" ")) {
            if (w.equals("Z")) {
                stack.pop();
            } else {
                stack.push(Integer.parseInt(w));
            }
        }
        for (int i : stack) {
            answer += i;
        }
        return answer;
    }
}

//배열 원소의 길이
class Solution {
    public int[] solution(String[] strlist) {
        int[] answer = new int[strlist.length];
        
        for(int i = 0; i < strlist.length; i++) {
           
            answer[i] = strlist[i].length();
        }
        
        return answer;
    }
}

//중복된 문자 제거
import java.util.*;

class Solution {
    public String solution(String my_string) {
        String answer = "";
        Stack<Character> stack = new Stack<>(); 

        for(int i=0; i<my_string.length(); i++){
            char currentChar = my_string.charAt(i);
            boolean isDuplicate = false; 
           
            for(Character ch : stack) {
                if(ch == currentChar) {
                    isDuplicate = true; 
                    break;
                }
            }

            if(!isDuplicate) {
                stack.push(currentChar);
            }
        }

        while(!stack.isEmpty()){
            answer = stack.pop() + answer; 
        }

        return answer;
    }
}

//삼각형의 완성조건 (1)
import java.util.Arrays;

class Solution {
    public int solution(int[] sides) {
        Arrays.sort(sides);

        if(sides[2] < sides[0] + sides[1]) return 1;
        else return 2;

    }
}

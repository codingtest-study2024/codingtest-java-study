//주사위의 개수
class Solution {
    public int solution(int[] box, int n) {

        int p = box[0]/n;
        int q = box[1]/n;
        int r = box[2]/n;
        return p*q*r;
    }
}

//합성수 찾기
class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i=2; i<=n; i++) { 
            if(composite(i)) {
                answer++;
            }
        }
        return answer;
    }
    public boolean composite(int n){
        int count = 0;
        for(int i=1;i<=n;i++){
            if(n%i == 0) count++;
        }
         return count > 2;
    }
}

//최댓값 만들기(1)
import java.util.Arrays;

class Solution {
    public int solution(int[] numbers) {
        int n = numbers.length;
        Arrays.sort(numbers);
        return numbers[n-1]*numbers[n-2];
    }
}

//팩토리얼
class Solution {
    public int solution(int n) {
        int answer = 0;
        for(int i=1; i <= n; i++) { 
            if(n >= factorial(i)) {
                answer = i; 
            } else {
                break; // n이 factorial(i)보다 작으면 루프 종료
            }
        }
        return answer;

    }
    public int factorial(int k){
        if(k<2) return 1;
        return k*factorial(k-1);

    }
}

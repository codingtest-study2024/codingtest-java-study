// 나머지 구하기
class Solution {
    public int solution(int num1, int num2) {
        int answer = -1;
        answer = num1%num2;
        return answer;
    }
}
// 중앙값 구하기
class Solution {
    public int solution(int[] array) {
        int answer = 0;
        int num = 0;
        int k = 0;
        int length = array.length;
        for(int i=0; i < length-1 ; i++) {
            if(array[i] > array[i+1]){
                num = array[i+1];
                array[i+1] = array[i];
                array[i] = num;
                }
        }
        
        k = length/2;
        answer = array[k];
        return answer;
    }
}
// 최빈값 구하기
class Solution {
    public int solution(int[] array) {
        int answer = 0;
        
        Arrays.sort(array);
        int max = array[array.length-1];
        int [] count = new int[max+1];
        
        for(int i=0; i< array.length; i++) {
				        count[array[i]] ++ ;
        }
        int top = count[0];
        for(int i=1; i< count.length; i++) {
				        if(top < count[i]) {
				        top = count[i];
				        answer = i;
				     }else if (top == count[i]) {
				     answer = -1;
						     }
        }
        return answer;
    }
}
// 짝수는 싫어요
class Solution {
    public int[] solution(int n) {
        int[] answer;
        if (n % 2 == 0) {
            answer = new int[n / 2];
        } else {
            answer = new int[(n + 1) / 2];
        }
        
        for (int i = 0; i < answer.length; i++) {
                answer[i] = (i * 2) + 1;
            }
        return answer;
    }
}

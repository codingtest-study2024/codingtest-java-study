// 배열 자르기
class Solution {
    public int[] solution(int[] numbers, int num1, int num2) {
        int[] answer = new int[num2 - num1 + 1];
        for (int i = num1; i <= num2; i++) {
            answer[i - num1] = numbers[i];
        }
        return answer;
    }
}

// 외계행성의 나이
class Solution {
	public String solution(int age) {
    	String answer = "";
        String age962 = "abcdefghij";
        String[] ageArr = String.valueOf(age).split("");
        
        for (int i = 0; i < ageArr.length; i++) {
        	answer += age962.charAt(Integer.valueOf(ageArr[i]));
		}
        return answer;
    }
}

// 진료순서 정하기
import java.util.*;

class Solution {
    public int[] solution(int[] emergency) {
        int[] answer = new int[emergency.length];
        int[] arr = new int[emergency.length]; // int[] arr = emergency; error
        for (int i = 0; i < emergency.length; i++) {
            arr[i] = emergency[i];
        }
        Arrays.sort(arr);
        
        for (int i = 0; i < emergency.length; i++) {
            for (int j = 0; j < emergency.length; j++) {
                if (emergency[j] == arr[i]) {
                    answer[j] = emergency.length - i;
                }
            }
        }
        
        return answer;
    }
}

// 순서쌍의 개수
class Solution {
    public int solution(int n) {
    	int count = 0;
    	for (int i = 1; i <= n; i++) {
    		if(n%i==0) {
    			count++;
    		}
		}
    	return count; 
    }
}

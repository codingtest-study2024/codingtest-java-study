// Day14

// 가까운 수
class Solution {
    public int solution(int[] array, int n) {
        int answer = array[0];
        int min = Math.abs(n - array[0]);
        
        for (int i = 1; i < array.length; i++) {
            if (min > Math.abs(n - array[i])) {
                min = Math.abs(n - array[i]);
                answer = array[i];
            } else if (min == Math.abs(n - array[i])) {
                if (answer > array[i]) {
                    answer = array[i];
                }
            }
        }
        
        return answer;
    }
}

// 369게임
class Solution {
    public int solution(int order) {
        int answer = 0;
        String s = Integer.toString(order);
        String[] arr = s.split("");
        
        for (int i = 0; i < arr.length; i++) {
            if (arr[i].equals("3") || arr[i].equals("6") || arr[i].equals("9")) answer++;
        }
        return answer;
    }
}

// 암호 해독
class Solution {
    public String solution(String cipher, int code) {
        String answer = "";
        
        for (int i = code-1; i < cipher.length(); i+=code) {
            answer += cipher.charAt(i);
        }
        return answer;
    }
}

// 대문자와 소문자
class Solution {
    public String solution(String my_string) {
        String answer = "";
        
        for (int i = 0; i < my_string.length(); i++) {
            if (Character.isUpperCase(my_string.charAt(i))) {
                answer += Character.toLowerCase(my_string.charAt(i));
            } else {
                answer += Character.toUpperCase(my_string.charAt(i));
            }
        }
        return answer;
    }
}
